server:
  port: ${PICABE_PORT_NET:8699}

payment:
  url: "https://pay1s.emiu.vn/checkout"

upload:
  url: ${UPLOAD_IMAGE_URL:https://cloud.emiu.vn/upload/images}
  api-key: ${UPLOAD_IMAGE_API_KEY:EDUMALL}

application:
  jwt:
    secret: "1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
    validDuration: 3600 # in second
    refreshableDuration: 36000 # in seconds

spring:
  #  kafka:
  #    bootstrap-servers: ${UAA_KAFKA_BOOTSTRAP_SERVERS:host.docker.internal:9092}
  #    consumer:
  #      group-id: uaa-service
  #      auto-offset-reset: earliest
  #      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  datasource:
    url: jdbc:mysql://${PICABE_DB_HOST_NET:localhost}:${PICABE_DB_PORT_NET:3306}/${PICABE_DB_NAME_NET:picabe}
    driverClassName: com.mysql.cj.jdbc.Driver
    username: ${PICABE_DB_USERNAME_NET:hackathon}
    password: ${PICABE_DB_PASSWORD_NET:hackathon}
  cache:
    type: redis
  data:
    redis:
      host: ${PICABE_REDIS_HOST_NET:localhost}
      port: ${PICABE_REDIS_PORT_NET:6379}
      password: ${PICABE_REDIS_PASSWORD_NET:} # Nếu không có mật khẩu, để trống
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
    # show-sql: true
  #    open-in-view: false
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
#logging:
#  level:
#    org:
#      springframework:
#        security: DEBUG
#        oauth2: DEBUG
#      cloud:
#        openfeign: DEBUG
#    feign:
#      Logger: DEBUG
#    org.hibernate.SQL: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
